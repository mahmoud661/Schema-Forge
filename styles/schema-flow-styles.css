/* Simple styles for React Flow */

/* Styling for the connection handles */
.react-flow__handle {
  width: 10px !important;
  height: 10px !important;
  border-radius: 50%;
  border: 2px solid white;
}

/* Dark mode handle borders */
@media (prefers-color-scheme: dark) {
  .react-flow__handle {
    border-color: #374151;
  }
}

/* Left handles style */
.react-flow__handle-left {
  background: #3b82f6 !important;
}

/* Right handles style */
.react-flow__handle-right {
  background: #10b981 !important;
}

/* Dark mode handle colors */
@media (prefers-color-scheme: dark) {
  .react-flow__handle-left {
    background: #60a5fa !important;
  }
  
  .react-flow__handle-right {
    background: #34d399 !important;
  }
}

/* Edge styling with dark mode support */
.react-flow__edge-path {
  stroke-width: 2;
}

:root {
  --edge-color: #3b82f6;
}

[data-theme="dark"] {
  --edge-color: #60a5fa;
}

.react-flow__connection-path {
  stroke-width: 2;
  stroke: var(--edge-color);
}

/* Hover effect for table columns */
.react-flow__node .hover\:bg-muted\/50:hover {
  background-color: rgba(0, 0, 0, 0.05);
}

/* Add collapsible animations */
@keyframes collapsibleDown {
  from { height: 0; }
  to { height: var(--radix-collapsible-content-height); }
}

@keyframes collapsibleUp {
  from { height: var(--radix-collapsible-content-height); }
  to { height: 0; }
}

.animate-collapsible-down {
  animation: collapsibleDown 200ms ease-out;
}

.animate-collapsible-up {
  animation: collapsibleUp 200ms ease-out;
}

/* Add scrollbar styling */
.scrollbar-thin {
  scrollbar-width: thin;
}

.scrollbar-thumb-muted-foreground\/20::-webkit-scrollbar-thumb {
  background-color: rgba(128, 128, 128, 0.2);
  border-radius: 8px;
}

/* Improve dark mode visibility for scrollbars */
@media (prefers-color-scheme: dark) {
  .scrollbar-thumb-muted-foreground\/20::-webkit-scrollbar-thumb {
    background-color: rgba(200, 200, 200, 0.2);
  }
}

.scrollbar-track-transparent::-webkit-scrollbar-track {
  background-color: transparent;
}

::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

.custom-handle {
  width: 12px !important;
  height: 12px !important;
  background: #a855f7 !important;
}

/* Custom styles for React Flow components */

/* Fix panel color in dark mode */
.react-flow__panel {
  background-color: hsl(var(--background));
  color: hsl(var(--foreground));
  border: 1px solid hsl(var(--border));
}

/* Hide React Flow attribution */
.react-flow__attribution {
  display: none;
}

/* Additional panel styling for better dark mode compatibility */
.dark .react-flow__panel {
  background-color: hsl(var(--card));
  border-color: hsl(var(--border));
}

/* Custom controls styling */
.react-flow__controls {
  box-shadow: 0 3px 15px rgba(0, 0, 0, 0.15);
  border-radius: var(--radius);
  overflow: hidden;
  padding: 0;
  display: flex;
  flex-direction: column;
  gap: 1px;
  background-color: hsl(var(--border));
}

/* Define border color for background patterns */
:root {
  --border-color: hsl(var(--border));
}

.dark {
  --border-color: hsl(var(--border) / 0.6);
}

.react-flow__controls button {
  width: 32px;
  height: 32px;
  background-color: hsl(var(--background));
  color: hsl(var(--foreground));
  border: none;
  padding: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease;
}

.react-flow__controls button:hover {
  background-color: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
}

.react-flow__controls button svg {
  width: 16px;
  height: 16px;
}

/* Add transition effect for smooth zoom animations */

/* Only apply the transition when zooming, not when dragging */
.react-flow__viewport.zooming {
  transition: transform 0.8s ease;
}

.react-flow__viewport.dragging {
  transition: none;
}

/* Custom minimap styling */
.react-flow__minimap {
  right: 12px;
  bottom: 12px;
  border-radius: var(--radius);
  overflow: hidden;
  opacity: 0.9;
  transition: opacity 0.2s ease;
}

.react-flow__minimap:hover {
  opacity: 1;
}

/* Active control button styling */
.react-flow__controls button.active-control {
  background-color: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
}

/* Tooltip styling */
.custom-flow-controls .tooltip {
  position: absolute;
  right: 40px;
  background: hsl(var(--popover));
  color: hsl(var(--popover-foreground));
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 12px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  white-space: nowrap;
  pointer-events: none;
  opacity: 0;
  transition: opacity 0.2s;
}

.custom-flow-controls button:hover .tooltip {
  opacity: 1;
}

/* Enhanced background styling */
.react-flow__background {
  transition: background-color 0.3s ease;
}

/* Animation for background pattern change */
@keyframes patternFade {
  0% { opacity: 0; }
  100% { opacity: 1; }
}

.react-flow__background.pattern-changing {
  animation: patternFade 0.5s ease;
}

/* Keyboard shortcuts indicator */
.keyboard-shortcuts {
  position: absolute;
  bottom: 10px;
  left: 10px;
  background: hsl(var(--background));
  border: 1px solid hsl(var(--border));
  border-radius: var(--radius);
  padding: 8px;
  font-size: 12px;
  opacity: 0.8;
  transition: opacity 0.2s;
  pointer-events: none;
}

.keyboard-shortcuts:hover {
  opacity: 1;
}

.keyboard-shortcuts kbd {
  background: hsl(var(--muted));
  padding: 2px 4px;
  border-radius: 3px;
  margin: 0 3px;
}

/* Dark mode control styling */
.dark .react-flow__controls {
  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.3);
  background-color: hsl(var(--border));
}

.dark .react-flow__controls button {
  background-color: hsl(var(--card));
  color: hsl(var(--card-foreground));
  border: none;
}

.dark .react-flow__controls button:hover {
  background-color: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
}

/* Active button state */
.react-flow__controls button:active {
  transform: translateY(1px);
}

/* Focus state for accessibility */
.react-flow__controls button:focus-visible {
  outline: 2px solid hsl(var(--ring));
  outline-offset: -2px;
}

/* Add subtle separator between buttons */
.react-flow__controls button + button {
  position: relative;
}

.react-flow__controls button + button::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 1px;
  background-color: hsl(var(--border));
}

/* Ensure controls are properly positioned */
.react-flow__controls-button svg {
  fill: currentColor;
}

/* Override default control icons to match your design system */
.react-flow__controls-zoomin svg,
.react-flow__controls-zoomout svg,
.react-flow__controls-fitview svg {
  stroke-width: 2px;
}

/* Mobile-friendly adjustments */
@media (max-width: 640px) {
  .react-flow__controls {
    scale: 0.9;
  }
}

/* Ensure controls are visible in dark mode */
.dark .react-flow__controls button {
  background-color: hsl(var(--card));
  color: hsl(var(--foreground));
  border-color: hsl(var(--border));
}

.dark .react-flow__controls button:hover {
  background-color: hsl(var(--accent));
}
